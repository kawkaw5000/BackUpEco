@model IEnumerable<AdminSideEcoFridge.Models.VwDonationTransactionMasterUserView>
@{
    ViewData["Title"] = "Donation Transaction";
}
<link href="~/css/donationtranslist.css" rel="stylesheet" />
<link href="~/css/user-profiles.css" rel="stylesheet" />
<div style="margin-left: 115px; margin-top: 70px; margin-right: 10px;">
    <h2>Donation Transaction List</h2>
    <div class="storage-container">

        <div style="position:relative;">
            <div style="position: absolute; left: 23px; top: -10px">
                <form method="get" action="@Url.Action("DonationTransaction", "Transaction")">
                <input type="text"
                       name="keyword"
                       style="width: 300px; border-radius: 5px; border-color: gray; border-width: 1px; padding-left: 74px; height: 25px;"
                       placeholder="Enter a keyword..." />
                <div style="position: absolute; top: -0.7px; left: 0px;">
                    <button type="submit"
                            style="
                                           border-radius: 5px;
                                           border-color: gray;
                                           border-width: 1px;
                                           height: 30px;
                                           width: 70px;
                                           color: white;
                                           background-color: #307A59;">
                        Search
                    </button>          
                </div>
                </form>
            </div>
            <div class="plan-table">
                <table class="user-list-table" id="plan-container">
                    <thead>
                        <tr>
                            <th>
                                <a href="@Url.Action("DonationTransaction", new { sortColumn = "ID", sortDirection = (ViewData["SortDirection"]?.ToString() == "asc" ? "desc" : "asc") })">
                                    ID
                                </a>
                            </th>
                            <th>
                                <a href="@Url.Action("DonationTransaction", new { sortColumn = "DonorName", sortDirection = (ViewData["SortDirection"]?.ToString() == "asc" ? "desc" : "asc") })">
                                    Donor Name
                                </a>
                            </th>
                            <th>
                                <a href="@Url.Action("DonationTransaction", new { sortColumn = "DoneeOrganizationName", sortDirection = (ViewData["SortDirection"]?.ToString() == "asc" ? "desc" : "asc") })">
                                    Donee Organization Name
                                </a>
                            </th>
                            <th>
                                <a href="@Url.Action("DonationTransaction", new { sortColumn = "Status", sortDirection = (ViewData["SortDirection"]?.ToString() == "asc" ? "desc" : "asc") })">
                                    Status
                                </a>
                            </th>
                            <th>
                                <a href="@Url.Action("DonationTransaction", new { sortColumn = "AccountType", sortDirection = (ViewData["SortDirection"]?.ToString() == "asc" ? "desc" : "asc") })">
                                    Account Type
                                </a>
                            </th>
                            <th>
                                <a href="@Url.Action("DonationTransaction", new { sortColumn = "TransactionDate", sortDirection = (ViewData["SortDirection"]?.ToString() == "asc" ? "desc" : "asc") })">
                                    Transaction Date
                                </a>
                            </th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null && Model.Any())
                        {
                            int i = 1;
                            foreach (var list in Model)
                            {
                                <tr>
                                    <td>@list.DonationTransactionMasterId</td>
                                    <td>@((list.FirstName == null) ? list.FoodBusinessName : list.FirstName) </td>
                                    <td>@list.DoneeOrgName</td>
                                    <td>
                                        @if (list.Status == "Approved")
                                        {
                                            <button class="approved-btn">Approved</button>
                                        }
                                    </td>
                                    <td>@list.AccountType</td>
                                    <td>@list.TransactionDate</td>
                                    <td>
                                        <button class="action-btn" data-donation-id="@list.DonationTransactionMasterId">
                                            View Items
                                        </button>
                                    </td>
                                </tr>
                                i++;
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="5">No Donation Transaction History.</td>
                            </tr>
                        }
                    </tbody>
                </table>

                <div>
                </div>
            </div>    
        </div>
    </div>
</div>

<div id="item-list" class="hide">
    <div class="donatedItemList">
        <table class="item-table">
            <thead>
                <tr>
                    <th>Food Name</th>
                    <th>Quantity</th>
                    <th>Unit</th>
                    <th>Expiration Date</th>
                    <th>Food Category</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>             
            </tbody>
        </table>
    </div>
</div>
<div id="blur-item" class="hide">
</div>
<script>
    document.addEventListener('DOMContentLoaded', function () {

        const buttons = document.querySelectorAll('.action-btn');

        buttons.forEach(button => {
            button.addEventListener('click', async function () {
                const donationId = this.getAttribute('data-donation-id');

                try {

                    const response = await fetch(`/Transaction/GetDonationByDonoMasterId?donorId=${donationId}`);
                    if (!response.ok) {
                        throw new Error('Failed to fetch donation items');
                    }

                    const data = await response.json();

                    const itemListDiv = document.getElementById('item-list');                  
                    itemListDiv.classList.remove('hide');
                    itemListDiv.classList.add('show');
                    document.getElementById('blur-item').classList.remove('hide');
                    document.getElementById('blur-item').classList.add('show');

                    const tbody = itemListDiv.querySelector('tbody');
                    tbody.innerHTML = ''; 

                    data.forEach(item => {
                        const row = document.createElement('tr');
                        row.innerHTML = `
                            <td>${item.foodName}</td>
                            <td>${item.quantity}</td>
                            <td>${item.unit}</td>
                            <td>${new Date(item.expiryDate).toLocaleDateString()}</td>
                            <td>${item.foodCategoryName}</td>
                        `;
                        tbody.appendChild(row);
                    });
                } catch (error) {
                    console.error('Error fetching donation items:', error);
                }
            });
        });
    });
    document.getElementById('blur-item').addEventListener('click', function(){
        const itemListDiv = document.getElementById('item-list');
        itemListDiv.classList.remove('show');
        itemListDiv.classList.add('hide');
        document.getElementById('blur-item').classList.remove('show');
        document.getElementById('blur-item').classList.add('hide');
    })
</script>