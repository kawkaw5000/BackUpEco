@{
    ViewData["Title"] = "Subscribers";
}
<link href="~/css/user-profiles.css" rel="stylesheet" />
<link href="~/css/welcome-admin.css" rel="stylesheet" />
<link href="~/css/header.css" rel="stylesheet" />
<link href="~/css/sidebar.css" rel="stylesheet" />
<link href="~/css/modal-approval.css" rel="stylesheet" />
<link href="~/css/subscriber-style.css" rel="stylesheet" />
<link href="~/css/charts.css" rel="stylesheet" />

<div style="margin-left: 115px; margin-top: 70px; margin-right: 10px; margin-bottom:0px;">
    <h2>Subscribers</h2>
</div>
<div class="subscriber-cont">
    <div class="subs-card">
        <h2>Active</h2>
        <h2>Subscribers</h2>
        <div class="user-counts">
            <img src="/images/Create-icons/profile-user (2).png" />
            <p>@Model.ActiveSubscribersCount</p>
        </div>
    </div>
    <div class="subs-card">
        <h2>Monthly</h2>
        <h2>Subscribers</h2>
        <div class="user-counts">
            <img src="/images/Create-icons/profile-user (2).png" />
            <p>@Model.CurrentMonthSubscribersCount</p>
        </div>
    </div>
    <div class="subs-card">
        <h2>Annual</h2>
        <h2>Subscribers</h2>
        <div class="user-counts">
            <img src="/images/Create-icons/profile-user (2).png" />
            <p>@Model.CurrentYearSubscribersCount</p>
        </div>
    </div>
</div>

<div class="chart-cont">
    <div class="pieChart">
        <h2>Current Plans</h2>
        <canvas id="myPieChart"></canvas>
    </div>

    <div class="charts" style="width: 70%; max-width: 600px; margin: auto; margin-top: 40px;">
        <div class="bar-title">
            <h2>Sales Chart</h2>
        </div>        
        <label for="timePeriod">Filter by: </label>
        <select id="timePeriod">
            <option value="yearly">Yearly</option>
            <option value="monthly">Monthly</option>
        </select>

        <div id="yearSelector" style="display: none; margin-top: 10px;">      
            <label for="year">Select Year: </label>
            <select id="year">
                @for (int year = 2024; year <= 2030; year++)
                {
                    <option value="@year">@year</option>
                }
            </select>
        </div>

        <div class="generate-btn">
            <button id="generateReportButton" class="btn btn-primary" style="margin-top: 20px;">Generate Sales Report</button>
        </div>
        
        <canvas id="myBarChart" style="margin-top: 20px;"></canvas>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    document.getElementById('generateReportButton').addEventListener('click', function () {
        const timePeriod = document.getElementById('timePeriod').value;
        const selectedYear = document.getElementById('year').value;
        const url = `/Transaction/GenerateSalesReport?period=${timePeriod}&year=${selectedYear}`;

        window.location.href = url;
    });
</script>
<script>

    const pieLabels = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.PieChartData.labels));
    const pieData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.PieChartData.data));
    const pieColors = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.PieChartData.colors)); 

    const ctxPie = document.getElementById('myPieChart').getContext('2d');
    const myPieChart = new Chart(ctxPie, {
        type: 'pie',
        data: {
            labels: pieLabels,
            datasets: [{
                label: 'Total Subscribers',
                data: pieData,
                backgroundColor: pieColors,
                hoverOffset: 4
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: { position: 'top' },
                tooltip: { enabled: true }
            }
        }
    });

    const yearlyData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.YearlyCounts));
    const yearlyLabels = ['2024', '2025', '2026', '2027', '2028', '2029', '2030'];

    const monthlyDataByYear = {
        @foreach (var year in Model.MonthlyCounts)
        {
            <text>'@year.Key': @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(year.Value)),</text>
        }
    };

    const monthlyLabels = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];

    const ctxBar = document.getElementById('myBarChart').getContext('2d');
    let myBarChart = new Chart(ctxBar, {
        type: 'bar',
        data: {
            labels: yearlyLabels,
            datasets: [{
                label: 'Subscriber Count',
                data: yearlyData,
                backgroundColor: '#307a59',
                borderColor: '#307a59',
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            scales: {
                y: { beginAtZero: true }
            },
            plugins: {
                legend: { display: true, position: 'top' }
            }
        }
    });

    function updateChartData(period, year = null) {
        if (period === 'yearly') {
            myBarChart.data.labels = yearlyLabels;
            myBarChart.data.datasets[0].data = yearlyData; 
            document.getElementById('yearSelector').style.display = 'none';
        } else {
            myBarChart.data.labels = monthlyLabels;
            myBarChart.data.datasets[0].data = monthlyDataByYear[year] || [];
            document.getElementById('yearSelector').style.display = 'block';
        }
        myBarChart.update();
    }

    document.getElementById('timePeriod').addEventListener('change', function () {
        const selectedPeriod = this.value;
        if (selectedPeriod === 'yearly') {
            updateChartData('yearly');
        } else {
            const defaultYear = document.getElementById('year').value;
            updateChartData('monthly', defaultYear);
        }
    });

    document.getElementById('year').addEventListener('change', function () {
        const selectedYear = this.value;
        updateChartData('monthly', selectedYear);
    });
</script>

