@model AdminSideEcoFridge.Models.User
<form method="post" asp-controller="Account" asp-action="EditOrg">
    <div class="edit-org-user-container">
        <div class="user-column-container">
            <div class="user-details-flex">
                <div class="profile">
                    <img src="@Model.ProfilePicturePath" alt="" class="user-img" id="userImg">
                </div>
                <div class="column-user-info">
                    <div class="details-info">Organization</div>

                    <div class="details-info">Barangay</div>
                    <div class="details-info">City</div>
                    <div class="details-info">Province</div>
                </div>
                <div class="column-user-info">
                    <input type="hidden" id="editOrgUserId" asp-for="UserId" />
                    <input type="hidden" asp-for="Email" />
                    <input type="hidden" asp-for="EmailConfirmed" />
                    <input type="hidden" asp-for="Password" />

                    <input type="hidden" asp-for="FirstName">
                    <div class="user-details">
                        <input type="text" id="editOrgName" asp-for="DoneeOrganizationName" readonly>
                    </div>

                    <div class="user-details">
                        <input type="text" id="editOrgBaranggay" asp-for="Barangay" readonly>
                    </div>
                    <div class="user-details">
                        <input type="text" id="editOrgCity" asp-for="City" readonly>
                    </div>
                    <div class="user-details">
                        <input type="text" id="editOrgProvince" asp-for="Province" readonly>
                    </div>
                </div>
            </div>
            <div class="org-flex">
                <p>Documents</p>
                <div class="food-org-docs-container">
                    <img src="@Model.ProofPicturePath" alt="" class="org-docx">
                </div>
            </div>
        </div>
        <div class="action-dropdown">
            @if (Model.AccountApproved == false)
            {
                <button type="button" class="action-drop">Action</button>
            }
            <div id="org-dropdown" class="dropdown">         
                    <button class="actions" type="button" data-action="org-approve">Approve</button>
                    <button class="actions" type="button" data-action="org-decline">Decline</button>          
            </div>
        </div>
      
        <div class="save-edit-org">
            @* <a onclick="saveBtn()" id="SaveBtn" class="save-edit-btn">Save</a> *@
            <button type="submit" class="save-edit-btn">Save</button>
        </div>
    </div>

    <div id="spinner-cont" class="spinner-cont">
        <div class="spinner" id="spinner"></div>
        <p id="sending">Sending please wait.</p>
        <p id="success-sending"><img src="/images/Create-icons/check-mark-svgrepo-com.svg" /></p>
    </div>
</form>
<script>

    document.addEventListener('click', function (event) {
        if (event.target.classList.contains('actions')) {
            const action = event.target.getAttribute('data-action');
            const buttonAction = document.getElementById('org-dropdown');       
            const spinnerCont = document.getElementById('spinner-cont');
            const spinner = document.getElementById('spinner');
            const sending = document.getElementById('sending');
            const succesSend = document.getElementById('success-sending');

            const userId = document.getElementById('editOrgUserId').value;
            const token = document.querySelector('input[name="__RequestVerificationToken"]').value;


            
            if (action === 'org-approve') {
                updateAccountApproval(true);
                buttonAction.style.display = 'none';
                spinnerCont.style.display = 'block';
                spinner.style.display = 'block';
                sending.style.display = 'block';
                succesSend.style.display = 'none';
                succesSend.innerText = '';
                buttonAction.style.display = 'none';

            } else if (action === 'org-decline') {
                spinnerCont.style.display = 'block';
                spinner.style.display = 'block';
                sending.style.display = 'block';
                succesSend.style.display = 'none';
                succesSend.innerText = '';
                buttonAction.style.display = 'none';
                fetch(`/Account/RecordDelete?userId=${userId}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest',
                        'RequestVerificationToken': token
                    }
                })
                .then(response => {
                    if (response.ok) {
                        spinner.style.display = 'none';
                        sending.style.display = 'none';
                        succesSend.style.display = 'none'; 
                        spinnerCont.style.display = 'none';
                        const row = document.querySelector(`tr[data-user-id='${userId}']`);
                        if (row) row.remove();
                     
                    } else {
                        console.error("Failed to delete the user.");
                    }
                })
                .catch(error => console.error('Error:', error))
                .finally(() => {
                    spinnerCont.style.display = 'none';
                });

            }
        }
    });


    function updateAccountApproval(isApproved) {
        const userId = document.getElementById('editOrgUserId').value;
        const spinnerContainer = document.getElementById('spinner-cont');
        const spinner = document.getElementById('spinner');
        const sendingMessage = document.getElementById('sending');
        const successMessage = document.getElementById('success-sending'); 

        $.ajax({
            type: 'POST',
            url: '@Url.Action("UpdateAccountApproval", "Account")',
            data: {
                userId: userId,
                isApproved: isApproved
            },
            success: function (response) {
                if (response.success) {
                    const row = document.querySelector(`tr[data-user-id='${userId}']`);
                    if (row) {
                        const statusCell = row.querySelector('td:first-child');
                        statusCell.innerHTML = isApproved ? '<button class="approved-btn">Approved</button>' : '';
                        if (!isApproved) row.remove();
                    }

                    // Hide sending and show success
                    sendingMessage.style.display = 'none';
                    successMessage.style.display = 'block';

                    // Hide the spinner after success message is shown
                    setTimeout(() => {
                        spinnerContainer.style.display = 'none';
                    }, 1100);
                } else {
                    console.log('Error updating status:', response.message);
                    spinnerContainer.style.display = 'none';
                }
            },
            error: function (error) {
                console.error(error);
                spinnerContainer.style.display = 'none';
            }
        });
    }
</script>
