@model AdminSideEcoFridge.Models.User

<link href="~/css/spinner.css" rel="stylesheet" />
<form id="editOrgUserForm" method="post" asp-controller="Account" asp-action="EditFoodResto">
     @Html.AntiForgeryToken()
    <div class="edit-food-user-container">
        <div class="user-column-container">
            <div class="user-details-flex">
                <div class="profile">
                    <img src="@("http://lagare8-001-site1.jtempurl.com" + Model.ProfilePicturePath)" alt="" class="user-img">
                </div>
                <div class="column-user-info">
                    <div class="details-info">Food Business</div>

                    <div class="details-info">Barangay</div>
                    <div class="details-info">City</div>
                    <div class="details-info">Province</div>
                </div>
                <div class="column-user-info">
                    <input type="hidden" id="editUserId" asp-for="UserId" />
                    <input type="hidden" id="editFoodEmail" asp-for="Email" />
                    <input type="hidden" asp-for="EmailConfirmed" />
                    <input type="hidden" asp-for="Password" />

                    <input type="hidden" asp-for="FirstName">
                    <div class="user-details">
                        <input type="text" id="editFoodName" asp-for="FoodBusinessName" readonly>
                    </div>

                    <div class="user-details">
                        <input type="text" id="editFoodBaranggay" asp-for="Barangay" readonly>
                    </div>
                    <div class="user-details">
                        <input type="text" id="editFoodCity" asp-for="City" readonly>
                    </div>
                    <div class="user-details">
                        <input type="text" id="editFoodProvince" asp-for="Province" readonly>
                    </div>
                </div>

            </div>
            <div class="org-flex">
                <p>Documents</p>
                <div class="food-org-docs-container">
                    <img src="@("http://lagare8-001-site1.jtempurl.com" + Model.ProofPicturePath)" alt="" class="org-docx">
                </div>
            </div>
        </div>
        <div id="drop-actions" class="action-dropdown">
            @if(Model.AccountApproved == false)
            {
                <button type="button" class="action-drop">Action</button>
            }           
            <div id="status-drop" class="dropdown">
                <button class="actions" type="button" data-action="approve">Approve</button>
                <button class="actions" type="button" data-action="decline">Decline</button>
            </div>
        </div>
       
        <div class="save-edit-org">
           
            <button type="submit" class="save-edit-btn">Save</button>
        </div>
    </div>

    <div id="food-spinner-cont" class="spinner-cont">
        <div class="spinner" id="food-spinner"></div>
        <p id="food-sending">Sending please wait.</p>
        <p id="food-success-sending">Sent Successfully!@* <img style="height:60px;" src="/images/Create-icons/check-mark-svgrepo-com.svg"/> *@</p>
    </div>
</form>
<script>
    document.addEventListener('click', function (event) {
        if (event.target.classList.contains('actions')) {
            const action = event.target.getAttribute('data-action');
            const buttonAction = document.getElementById('status-drop');
            const spinnerCont = document.getElementById("food-spinner-cont");
            const spinner = document.getElementById("food-spinner");
            const sending = document.getElementById("food-sending");
            const succesSend = document.getElementById("food-success-sending");

            const userId = document.getElementById('editUserId').value;
            const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

            if (buttonAction.disabled) return;
    
            buttonAction.disabled = true;
            buttonAction.style.display = 'none';

            if (action === 'approve') {
                spinnerCont.style.display = 'block';
                spinner.style.display = 'block';
                sending.style.display = 'block';
                succesSend.style.display = 'none';
                succesSend.innerText = '';

                fetch('/Account/UpdateAccountApproval', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': token
                    },
                    body: JSON.stringify({ userId, isApproved: true })
                })
                    .then(response => response.json())
                    .then(response => {
                        if (response.success) {
                            spinner.style.display = 'none';
                            sending.style.display = 'none';
                            succesSend.style.display = 'block';
                            succesSend.innerText = 'User approved successfully!';

                            const row = document.querySelector(`tr[data-user-id='${userId}']`);
                            if (row) {
                                const statusCell = row.querySelector('td:first-child');
                                statusCell.innerHTML = '<button class="approved-btn">Approved</button>';
                            }
                        } else {
                            console.error("Approval failed:", response.message);
                        }
                    })
                    .catch(error => console.error('Error:', error))
                    .finally(() => {
                        spinnerCont.style.display = 'none';
                        buttonAction.disabled = false; 
                    });

            } else if (action === 'decline') {
                spinnerCont.style.display = 'block';
                spinner.style.display = 'block';
                sending.style.display = 'block';
                succesSend.style.display = 'none';
                succesSend.innerText = '';

                fetch(`/Account/RecordDelete?userId=${userId}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest',
                        'RequestVerificationToken': token
                    }
                })
                .then(response => {
                    if (response.ok) {
                        spinner.style.display = 'none';
                        sending.style.display = 'none';
                        succesSend.style.display = 'none';
                        spinnerCont.style.display = 'none';

                        const row = document.querySelector(`tr[data-user-id='${userId}']`);
                        if (row) row.remove();

                    } else {
                        console.error("Failed to delete the user.");
                    }
                })
                .catch(error => console.error('Error:', error))
                .finally(() => {
                    buttonAction.disabled = false;
                });
            }
        }
    });
</script>
